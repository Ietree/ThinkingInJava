<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename package &apos;com.ietree.adapter.worker&apos; to &apos;com.ietree.designpattern.adapter.worker&apos;&#x0D;&#x0A;- Original project: &apos;ThinkingInJava&apos;&#x0D;&#x0A;- Original element: &apos;ThinkingInJava/src/com.ietree.adapter.worker&apos;&#x0D;&#x0A;- Renamed element: &apos;ThinkingInJava/src/com.ietree.designpattern.adapter.worker&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;com.ietree.adapter.worker&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;com.ietree.adapter.worker" name="com.ietree.designpattern.adapter.worker" qualified="false" references="true" stamp="1505258909873" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;cooker&apos; from expression &apos;new Cooker()&apos;&#x0D;&#x0A;- Original project: &apos;ThinkingInJava&apos;&#x0D;&#x0A;- Variable name: &apos;cooker&apos;&#x0D;&#x0A;- Destination method: &apos;com.ietree.designpattern.adapter.worker.test.AdapterTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Cooker()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;cooker&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.ietree.designpattern.adapter.worker.test{AdapterTest.java" name="cooker" replace="true" selection="206 0" stamp="1505259190707" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;programmer&apos; from expression &apos;new Programmer()&apos;&#x0D;&#x0A;- Original project: &apos;ThinkingInJava&apos;&#x0D;&#x0A;- Variable name: &apos;programmer&apos;&#x0D;&#x0A;- Destination method: &apos;com.ietree.designpattern.adapter.worker.test.AdapterTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Programmer()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;programmer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.ietree.designpattern.adapter.worker.test{AdapterTest.java" name="programmer" replace="true" selection="308 0" stamp="1505259205317" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.ietree.designpattern.adapter.worker.IWorker&apos; to &apos;IWorkerAdapter&apos;&#x0D;&#x0A;- Original project: &apos;ThinkingInJava&apos;&#x0D;&#x0A;- Original element: &apos;com.ietree.designpattern.adapter.worker.IWorker&apos;&#x0D;&#x0A;- Renamed element: &apos;com.ietree.designpattern.adapter.worker.IWorkerAdapter&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;IWorker&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.ietree.designpattern.adapter.worker{IWorker.java[IWorker" matchStrategy="1" name="IWorkerAdapter" qualified="false" references="true" similarDeclarations="false" stamp="1505261125800" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;adapter&apos; from expression &apos;new WorkerAdapter()&apos;&#x0D;&#x0A;- Original project: &apos;ThinkingInJava&apos;&#x0D;&#x0A;- Variable name: &apos;adapter&apos;&#x0D;&#x0A;- Destination method: &apos;com.ietree.designpattern.adapter.worker.test.AdapterTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new WorkerAdapter()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;adapter&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.ietree.designpattern.adapter.worker.test{AdapterTest.java" name="adapter" replace="true" selection="763 0" stamp="1505261542841" version="1.0"/>
</session>